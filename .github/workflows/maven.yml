# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
        RESOURCE_GROUP: int493
        DISK_NAME: lab1vm_DataDisk_0
        VM_SIZE: Standard_B1s
        VM_NAME: lab1vm
        VM_IMAGE: Canonical:0001-com-ubuntu-server-focal:20_04-lts-gen2:20.04.202101191
    steps:
    - uses: actions/checkout@v2

    - name: AZURE LOGIN 
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: DELETE VM
      run: |
        az vm delete \
          --resource-group $RESOURCE_GROUP \
          --name $VM_NAME -y
    - name: DELETE Disk
      run: |
        az disk delete \
          --name $DISK_NAME \
          --resource-group $RESOURCE_GROUP -y
    - name: CREATE Disk
      run: |
        az disk create \
          --name $DISK_NAME \
          --resource-group $RESOURCE_GROUP \
          --size-gb 8
    - name: CREATE VM
      uses: azure/CLI@v1
      with:
        azcliversion: 2.0.72
        inlineScript: |
          az vm create \
          --resource-group $RESOURCE_GROUP \
          --name $VM_NAME \
          --admin-username azureuser \
          --admin-password ${{ secrets.PASSWORD }} \
          --location  southeastasia \
          --attach-data-disks $DISK_NAME \
          --image $VM_IMAGE \
    - name: SET IP Address
      id: vars
      run: |
        IP=$(az vm show -d -g $RESOURCE_GROUP -n $VM_NAME --query publicIps -o tsv)
        echo "::set-output name=ip::$IP"
    - name: Check ip address
      run: echo ${{ steps.vars.outputs.ip }}  
    - name: SET Port Inbround
      run: |
        az vm open-port \
          --port 8080 \
          --name $VM_NAME \
          --priority 1010 \
          --resource-group $RESOURCE_GROUP
    - name: DELETE DNS record
      run: |
        az network dns record-set a delete \
          --name @ \
          --resource-group $RESOURCE_GROUP \
          --zone-name a1.tnpl.me -y
    - name: CREATE DNS record
      run: |
        IP=${{ steps.vars.outputs.ip }}
        az network dns record-set a create \
          --name @ \
          --resource-group $RESOURCE_GROUP \
          --zone-name a1.tnpl.me -o none
        az network dns record-set a add-record \
          --ipv4-address $IP \
          --record-set-name @ \
          --resource-group $RESOURCE_GROUP \
          --zone-name a1.tnpl.me \
          --ttl 300 -o none
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 15
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: grant access to write file
      uses: appleboy/ssh-action@master
      with:
        host: a1.tnpl.me
        username: azureuser
        password: ${{ secrets.PASSWORD }}
        script: |
          sudo chmod a+rws /home/azureuser/
          sudo chmod a+rws /lib/systemd/system/
    - name: Copy lab1 to vm
      uses: garygrossgarten/github-action-scp@release
      with:
        local: target/demo-0.0.1-SNAPSHOT.jar
        remote: lab1.jar
        host: a1.tnpl.me
        username: azureuser
        password: ${{ secrets.PASSWORD }}
    - name: Copy service to vm
      uses: garygrossgarten/github-action-scp@release
      with:
        local: lab1.service
        remote: /lib/systemd/system/lab1.service
        host: a1.tnpl.me
        username: azureuser
        password: ${{ secrets.PASSWORD }}
    - name: start daemon-reload and install java 15
      uses: appleboy/ssh-action@master
      with:
        host: a1.tnpl.me
        username: azureuser
        password: ${{ secrets.PASSWORD }}
        script: |
          sudo apt update
          sudo apt upgrade
          sudo apt install openjdk-15-jre-headless
          sudo systemctl daemon-reload
          sudo systemctl enable lab1
          sudo systemctl stop lab1
          sudo systemctl start lab1
